services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
    - 27017:27017
    networks:
      - db
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'MongoDB!'
    volumes:
      - "datadb:/data/db"
      - "configdb:/data/configdb"
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: 'admin'
      ME_CONFIG_BASICAUTH_PASSWORD: 'MongoExpress!'
      ME_CONFIG_MONGODB_ADMINUSERNAME: 'root'
      ME_CONFIG_MONGODB_ADMINPASSWORD: 'MongoDB!'
      ME_CONFIG_MONGODB_SERVER: 'db'
    networks:
      - db
    links:
      - mongo
    depends_on:
      - mongo
  redis-compose:
    image: redis:7.2.4-alpine
    container_name: redis
    command: redis-server
    hostname: redis
    ports:
      - 6379:6379
    networks:
      - db
  wiremock:
    image: "wiremock/wiremock:latest"
    container_name: my_wiremock
    volumes:
      - wiremockvl:/var/wiremock/extensions
      - wiremockvl:/home/wiremock/__files
      - ./wiremock/mappings:/home/wiremock/mappings
    ports:
      - 8082:8080
    entrypoint: ["/docker-entrypoint.sh", "--global-response-templating", "--disable-gzip", "--verbose"]
    networks:
      - db

volumes:
  datadb:
  configdb:
  wiremockvl:

networks:
  db:
    driver: bridge
